"A datetime string with format `Y-m-d H:i:s`, e.g. `2018-05-23 13:43:32`."
scalar DateTime @scalar(class: "Nuwave\\Lighthouse\\Schema\\Types\\Scalars\\DateTime")

"Indicates what fields are available at the top level of a query operation."
type Query @guard{
    me: User! @auth
    "Find a single user by an identifying attribute."
    user(
      "Search by primary key."
      id: ID @eq @rules(apply: ["prohibits:email", "required_without:email"])

      "Search by email address."
      email: String @eq @rules(apply: ["prohibits:id", "required_without:id", "email"])
    ): User @find

    "List multiple users."
    users(
      "Filters by name. Accepts SQL LIKE wildcards `%` and `_`."
      name: String @where(operator: "like")
    ): [User!]! @paginate(defaultCount: 10)

    event (
        id: ID @eq @rules(apply: ["prohibits:slug", "required_without:slug"])
        slug: String @eq @rules(apply: ["prohibits:id", "required_without:id"])
    ):Event @find

    events (
        name: String @where(operator: "like")
    ):[Event!]! @paginate(defaultCount: 10)
}

"Account of a person who utilizes this application."
type User {
    "Unique primary key."
    id: ID!

    "Non-unique name."
    name: String!

    "Unique email address."
    email: String!

    "When the email was verified."
    email_verified_at: DateTime

    "When the account was created."
    created_at: DateTime!

    "When the account was last updated."
    updated_at: DateTime!
}

type Event{
    id: ID!
    slug: String!
    name: String!
    description: String
    start_date: DateTime
    end_date: DateTime
    max_participants: Int
    location: String
}

type Mutation {
    createUser(
        name: String!
        email: String!
        password: String!
    ): User! @create @guard

    createEvent(
        name: String!
        description: String
        start_date: DateTime
        end_date: DateTime
        max_participants: Int
        location: String
    ): Event! @create @guard
    "Log in to a new session and get the user."
    login(email: String!, password: String!): User!

    "Log out from the current session, showing the user one last time."
    logout: User @guard
}

